services:
  # Database server for multi-tier testing
  database:
    image: postgres:15-alpine
    container_name: database
    environment:
      POSTGRES_DB: network_test
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    networks:
      - backend
    ports:
      - "5433:5432"

  # Client container for testing
  client:
    image: alpine:latest
    container_name: client
    networks:
      - frontend
    command: tail -f /dev/null
    volumes:
      - ./tools:/tools
      - ./modules/01-basics/basic-commands:/commands
    cap_add:
      - NET_ADMIN
      - NET_RAW

  # Networking practice container with full tools
  net-practice:
    image: ubuntu:22.04
    container_name: net-practice
    networks:
      - frontend
      - backend
    command: |
      bash -c "
        apt-get update &&
        apt-get install -y iproute2 net-tools traceroute iputils-ping tcpdump curl wget dnsutils nmap iptables net-tools python3 python3-pip python3-dev build-essential netcat-openbsd tshark isc-dhcp-client &&
        pip install -r /scripts/requirements.txt &&
        echo 'source /scripts/init-run.sh' >> /root/.bashrc &&
        echo 'source /scripts/init-run.sh' >> /etc/bash.bashrc &&
        tail -f /dev/null
      "
    volumes:
      - ./modules/01-basics/basic-commands:/commands
      - ./modules:/modules
      - ./tools:/tools
      - ./scripts:/scripts
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_ADMIN
    privileged: true

  # Router simulation (using Linux routing)
  router:
    image: alpine:latest
    container_name: router
    privileged: true
    networks:
      - frontend
      - backend
    command: |
      sh -c "
        apk add --no-cache iproute2 iptables &&
        echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf &&
        sysctl -p &&
        tail -f /dev/null
      "

  # Firewall testing container
  firewall-test:
    image: ubuntu:22.04
    container_name: firewall-test
    networks:
      - frontend
    command: |
      bash -c "
        apt-get update &&
        apt-get install -y iptables net-tools iproute2 &&
        tail -f /dev/null
      "
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true
    volumes:
      - ./tools:/tools

networks:
  frontend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
