services:
  nginx-basic:
    image: nginx:alpine
    container_name: nginx-basic
    ports:
      - "8090:80"
      - "8440:443"
    volumes:
      - ./nginx-configs/server-basic.conf:/etc/nginx/conf.d/default.conf:ro
      - ./html:/usr/share/nginx/html:ro
      - ./ssl-certs:/etc/ssl/certs:ro
    command: [ "nginx", "-g", "daemon off;" ]
    restart: unless-stopped
    networks:
      - http-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx-advanced:
    image: nginx:alpine
    container_name: nginx-advanced
    ports:
      - "8091:80"
      - "8441:443"
    volumes:
      - ./nginx-configs/server-advanced.conf:/etc/nginx/conf.d/default.conf:ro
      - ./html:/usr/share/nginx/html:ro
      - ./ssl-certs:/etc/ssl/certs:ro
    command: [ "nginx", "-g", "daemon off;" ]
    restart: unless-stopped
    networks:
      - http-network
    profiles:
      - advanced

  nginx-ssl:
    image: nginx:alpine
    container_name: nginx-ssl
    ports:
      - "8092:80"
      - "8442:443"
    volumes:
      - ./nginx-configs/server-ssl.conf:/etc/nginx/conf.d/default.conf:ro
      - ./html:/usr/share/nginx/html:ro
      - ./ssl-certs:/etc/ssl/certs:ro
    command: [ "nginx", "-g", "daemon off;" ]
    restart: unless-stopped
    networks:
      - http-network
    profiles:
      - ssl

  apache-basic:
    image: httpd:alpine
    container_name: apache-basic
    ports:
      - "8093:80"
      - "8443:443"
    volumes:
      - ./apache-configs:/usr/local/apache2/conf:ro
      - ./html:/usr/local/apache2/htdocs:ro
      - ./ssl-certs:/etc/ssl/certs:ro
    restart: unless-stopped
    networks:
      - http-network
    profiles:
      - apache

  backend-app1:
    image: nginx:alpine
    container_name: backend-app1
    ports:
      - "9001:80"
    volumes:
      - ./html:/usr/share/nginx/html:ro
    command: [ "nginx", "-g", "daemon off;" ]
    restart: unless-stopped
    networks:
      - http-network
    profiles:
      - loadbalancer

  backend-app2:
    image: nginx:alpine
    container_name: backend-app2
    ports:
      - "9002:80"
    volumes:
      - ./html:/usr/share/nginx/html:ro
    command: [ "nginx", "-g", "daemon off;" ]
    restart: unless-stopped
    networks:
      - http-network
    profiles:
      - loadbalancer

  backend-app3:
    image: nginx:alpine
    container_name: backend-app3
    ports:
      - "9003:80"
    volumes:
      - ./html:/usr/share/nginx/html:ro
    command: [ "nginx", "-g", "daemon off;" ]
    restart: unless-stopped
    networks:
      - http-network
    profiles:
      - loadbalancer

  http-test-client:
    image: alpine:latest
    container_name: http-test-client
    command: [ "tail", "-f", "/dev/null" ]
    depends_on:
      - nginx-basic
    networks:
      - http-network
    profiles:
      - testing

networks:
  http-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/16
